plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'jacoco'
	id 'java'
}

group = 'ee.taltech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}
jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/customJacocoReportDir")
}
jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.4.8'
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	compile 'org.springframework.boot:spring-boot-starter-web'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'io.rest-assured:rest-assured:3.3.0'
	compile 'io.springfox:springfox-boot-starter:3.0.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

test {
	useJUnitPlatform()
	exclude '**/*RestAssuredTest*' // These tests require web app to be up and cannot be tested with ci/cd
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jacoco {
	toolVersion = "0.8.6"
	reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'BUNDLE'
			limit {
				counter = 'COMPLEXITY'
				value = 'COVEREDRATIO'
				minimum = 0.20
			}
		}
	}
}

check.dependsOn(
		test,
		jacocoTestReport,
		jacocoTestCoverageVerification
)
